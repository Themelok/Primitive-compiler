
str = 'Parser error: Два знака математических операций "*-" подряд в определении "dx". Символ номер 20'

str.split


# arr={'t': [0., 0.09009009, 0.18018018, 0.27027027,
#        0.36036036, 0.45045045, 0.54054054, 0.63063063,
#        0.72072072, 0.81081081, 0.9009009, 0.99099099,
#        1.08108108, 1.17117117, 1.26126126, 1.35135135,
#        1.44144144, 1.53153153, 1.62162162, 1.71171171,
#        1.8018018, 1.89189189, 1.98198198, 2.07207207,
#        2.16216216, 2.25225225, 2.34234234, 2.43243243,
#        2.52252252, 2.61261261, 2.7027027, 2.79279279,
#        2.88288288, 2.97297297, 3.06306306, 3.15315315,
#        3.24324324, 3.33333333, 3.42342342, 3.51351351,
#        3.6036036, 3.69369369, 3.78378378, 3.87387387,
#        3.96396396, 4.05405405, 4.14414414, 4.23423423,
#        4.32432432, 4.41441441, 4.5045045, 4.59459459,
#        4.68468468, 4.77477477, 4.86486486, 4.95495495,
#        5.04504505, 5.13513514, 5.22522523, 5.31531532,
#        5.40540541, 5.4954955, 5.58558559, 5.67567568,
#        5.76576577, 5.85585586, 5.94594595, 6.03603604,
#        6.12612613, 6.21621622, 6.30630631, 6.3963964,
#        6.48648649, 6.57657658, 6.66666667, 6.75675676,
#        6.84684685, 6.93693694, 7.02702703, 7.11711712,
#        7.20720721, 7.2972973, 7.38738739, 7.47747748,
#        7.56756757, 7.65765766, 7.74774775, 7.83783784,
#        7.92792793, 8.01801802, 8.10810811, 8.1981982,
#        8.28828829, 8.37837838, 8.46846847, 8.55855856,
#        8.64864865, 8.73873874, 8.82882883, 8.91891892,
#        9.00900901, 9.0990991, 9.18918919, 9.27927928,
#        9.36936937, 9.45945946, 9.54954955, 9.63963964,
#        9.72972973, 9.81981982, 9.90990991, 10.], 'x': [10., 10.22, 10.511, 10.859, 11.255, 11.695,
#                                                        12.176, 12.696, 13.254, 13.849, 14.481, 15.151,
#                                                        15.858, 16.603, 17.387, 18.209, 19.071, 19.972,
#                                                        20.913, 21.895, 22.918, 23.982, 25.087, 26.233,
#                                                        27.419, 28.646, 29.913, 31.22, 32.565, 33.948,
#                                                        35.368, 36.823, 38.312, 39.833, 41.384, 42.964,
#                                                        44.57, 46.199, 47.849, 49.518, 51.202, 52.899,
#                                                        54.605, 56.318, 58.034, 59.75, 61.463, 63.169,
#                                                        64.866, 66.55, 68.219, 69.869, 71.498, 73.103,
#                                                        74.682, 76.233, 77.753, 79.241, 80.694, 82.112,
#                                                        83.493, 84.835, 86.138, 87.402, 88.625, 89.808,
#                                                        90.95, 92.051, 93.112, 94.132, 95.112, 96.053,
#                                                        96.955, 97.819, 98.646, 99.436, 100.191, 100.911,
#                                                        101.598, 102.252, 102.875, 103.468, 104.031, 104.566,
#                                                        105.074, 105.556, 106.014, 106.448, 106.859, 107.248,
#                                                        107.616, 107.965, 108.295, 108.607, 108.902, 109.18,
#                                                        109.443, 109.691, 109.925, 110.146, 110.355, 110.552,
#                                                        110.738, 110.913, 111.078, 111.234, 111.381, 111.519,
#                                                        111.649, 111.772, 111.888, 111.997],
#  'y': [145., 130.43, 119.889, 111.905, 105.659, 100.652,
#        96.562, 93.17, 90.324, 87.911, 85.848, 84.072,
#        82.533, 81.193, 80.021, 78.992, 78.085, 77.283,
#        76.572, 75.94, 75.377, 74.874, 74.424, 74.021,
#        73.66, 73.335, 73.042, 72.778, 72.54, 72.325,
#        72.13, 71.953, 71.792, 71.646, 71.513, 71.391,
#        71.28, 71.178, 71.084, 70.998, 70.919, 70.846,
#        70.778, 70.715, 70.657, 70.603, 70.552, 70.504,
#        70.459, 70.417, 70.377, 70.34, 70.305, 70.271,
#        70.239, 70.209, 70.18, 70.152, 70.126, 70.101,
#        70.077, 70.054, 70.032, 70.011, 69.99, 69.97,
#        69.951, 69.933, 69.915, 69.898, 69.882, 69.866,
#        69.851, 69.836, 69.822, 69.809, 69.796, 69.784,
#        69.772, 69.761, 69.75, 69.739, 69.729, 69.719,
#        69.71, 69.701, 69.693, 69.685, 69.677, 69.67,
#        69.663, 69.656, 69.65, 69.644, 69.638, 69.632,
#        69.627, 69.622, 69.617, 69.612, 69.608, 69.604,
#        69.6, 69.596, 69.592, 69.589, 69.586, 69.583,
#        69.58, 69.577, 69.574, 69.572]}
#
#
#
#
# finst=''
# for k,v in arr.items():
#     finst+=k
#     for l in v:
#         finst+="|{:^10}".format(round(float(l), 2))
#     finst+='\n'
#
#
# print(finst)











# import os
# import sys
# from tkinter import *
# from lexex import Node as Node
# from lexex import Lexer as Lexer
# from lexex import Parser as Parser
# from euler import EulerMethod as EulerMethod
# from post_lex_handler import PostParserHandler as PostParserHandler
#
#
#
# class MyUI(Tk):
#     def __init__(self):
#         super().__init__()
#
#         self.initUI()
#         self.Pack()
#
#     def initUI(self):
#         self.f = Frame(self)
#         self.title('Анализатор')
#         self.text_area = Text(self.f, height=15, width=80, font='Arial 12', undo=True)
#         self.xscroll = Scrollbar(self.f, orient=HORIZONTAL)
#         self.result = Text(self.f, width=110, font='Arial 10', height=3, background='#ccc', wrap=NONE, xscrollcommand=self.xscroll.set)
#         st = 'Python Tkinter Scrollbar - Learning Python in simple and easy steps : A ... that is used to implement vertical scrolled widgets, such as Listbox, Text and Canvas.'
#         self.result.insert(INSERT, st)
#         self.result.configure(xscrollcommand=self.xscroll.set)
#         self.xscroll.config(command=self.result.xview)
#         self.result.configure(state=DISABLED)
#
#         self.btn_doit= Button(self.f, text='DO IT!', command=self.do_it)
#
#     def Pack(self):
#         self.f.pack()
#         self.text_area.pack()
#         self.btn_doit.pack(fill=X)
#         self.result.pack()
#
#         self.xscroll.pack(fill=X)
# #
#     def do_it(self):
#         file = open('input.txt', 'w')
#         file.write(self.text_area.get('1.0', END))
#         file.close()
# # def func():
# #     f = open('expr.txt')
# #     str = text_area.get("1.0+1c")
# #     text_area.tag_configure('lala', font='14', background='#ff0000', foreground="#fff", underline=True)
# #     text_area.tag_add('lala', "1.0+1c")
# #     label.configure(text=str, justify=LEFT)
# #
# # tk = Tk()
# #
# #
# # tk.title('Анализатор')
# # btn_exec = Button(text="Calculate", command=func)
# # text_area = Text(height=15,width=80, font='Arial 12', undo=True)
# # label = Label(text='WTF')
# #
# # text_area.pack()
# # btn_exec.pack()
# # label.pack()
#
#
# # tk.mainloop()
#
# if __name__== '__main__':
#     ui = MyUI()
#     ui.mainloop()
